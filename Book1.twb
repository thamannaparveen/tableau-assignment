<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='matches+' inline='true' name='federated.0vrm1a80em23vw13pnhnm185xp22' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.0h4j8g80gam3ss1gkxldi1swi3ls'>
            <connection class='textscan' directory='C:/Users/thama/Downloads' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0h4j8g80gam3ss1gkxldi1swi3ls' name='deliveries.csv' table='[deliveries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='string' name='batting_team' ordinal='2' />
            <column datatype='string' name='bowling_team' ordinal='3' />
            <column datatype='integer' name='over' ordinal='4' />
            <column datatype='integer' name='ball' ordinal='5' />
            <column datatype='string' name='batsman' ordinal='6' />
            <column datatype='string' name='non_striker' ordinal='7' />
            <column datatype='string' name='bowler' ordinal='8' />
            <column datatype='integer' name='is_super_over' ordinal='9' />
            <column datatype='integer' name='wide_runs' ordinal='10' />
            <column datatype='integer' name='bye_runs' ordinal='11' />
            <column datatype='integer' name='legbye_runs' ordinal='12' />
            <column datatype='integer' name='noball_runs' ordinal='13' />
            <column datatype='integer' name='penalty_runs' ordinal='14' />
            <column datatype='integer' name='batsman_runs' ordinal='15' />
            <column datatype='integer' name='extra_runs' ordinal='16' />
            <column datatype='integer' name='total_runs' ordinal='17' />
            <column datatype='string' name='player_dismissed' ordinal='18' />
            <column datatype='string' name='dismissal_kind' ordinal='19' />
            <column datatype='string' name='fielder' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0h4j8g80gam3ss1gkxldi1swi3ls' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0h4j8g80gam3ss1gkxldi1swi3ls' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_F846C3F72D8C401C91414F30473F2C68]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_1DF5C063FCC94F229ED7F882A931647E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_F846C3F72D8C401C91414F30473F2C68]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
      <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vrm1a80em23vw13pnhnm185xp22]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:total_runs:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:player_of_match:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B Stanlake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Gill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Curran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J Bairstow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;M Ur Rahman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;K Ahmed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JJ Roy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;L Ngidi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Joseph&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Hetmyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;J Archer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;K Paul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;P Shaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;H Gurney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_1DF5C063FCC94F229ED7F882A931647E'>
            <properties context=''>
              <relation connection='textscan.0h4j8g80gam3ss1gkxldi1swi3ls' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='string' name='batting_team' ordinal='2' />
                  <column datatype='string' name='bowling_team' ordinal='3' />
                  <column datatype='integer' name='over' ordinal='4' />
                  <column datatype='integer' name='ball' ordinal='5' />
                  <column datatype='string' name='batsman' ordinal='6' />
                  <column datatype='string' name='non_striker' ordinal='7' />
                  <column datatype='string' name='bowler' ordinal='8' />
                  <column datatype='integer' name='is_super_over' ordinal='9' />
                  <column datatype='integer' name='wide_runs' ordinal='10' />
                  <column datatype='integer' name='bye_runs' ordinal='11' />
                  <column datatype='integer' name='legbye_runs' ordinal='12' />
                  <column datatype='integer' name='noball_runs' ordinal='13' />
                  <column datatype='integer' name='penalty_runs' ordinal='14' />
                  <column datatype='integer' name='batsman_runs' ordinal='15' />
                  <column datatype='integer' name='extra_runs' ordinal='16' />
                  <column datatype='integer' name='total_runs' ordinal='17' />
                  <column datatype='string' name='player_dismissed' ordinal='18' />
                  <column datatype='string' name='dismissal_kind' ordinal='19' />
                  <column datatype='string' name='fielder' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches.csv' id='matches.csv_F846C3F72D8C401C91414F30473F2C68'>
            <properties context=''>
              <relation connection='textscan.0h4j8g80gam3ss1gkxldi1swi3ls' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='integer' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[match_id]' />
            </expression>
            <first-end-point object-id='matches.csv_F846C3F72D8C401C91414F30473F2C68' />
            <second-end-point object-id='deliveries.csv_1DF5C063FCC94F229ED7F882A931647E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='best batsman'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.0vrm1a80em23vw13pnhnm185xp22' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrm1a80em23vw13pnhnm185xp22'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:batsman:nk]'>
            <groupfilter function='member' level='[none:batsman:nk]' member='&quot;V Kohli&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:batsman_runs:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:batsman_runs:qk]' />
              <text column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:batsman:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{F10C9BAF-4903-4641-B842-318E75AE1EC5}' />
    </worksheet>
    <worksheet name='best bowler'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.0vrm1a80em23vw13pnhnm185xp22' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrm1a80em23vw13pnhnm185xp22'>
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[player_dismissed]' derivation='Count' name='[cnt:player_dismissed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:bowler:nk]'>
            <groupfilter function='member' level='[none:bowler:nk]' member='&quot;SL Malinga&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vrm1a80em23vw13pnhnm185xp22].[cnt:player_dismissed:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0vrm1a80em23vw13pnhnm185xp22].[cnt:player_dismissed:qk]' />
              <text column='[federated.0vrm1a80em23vw13pnhnm185xp22].[cnt:player_dismissed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:bowler:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{6F6538E1-0BA3-4A76-AA29-5B93D57C641D}' />
    </worksheet>
    <worksheet name='best chacing team'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.0vrm1a80em23vw13pnhnm185xp22' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrm1a80em23vw13pnhnm185xp22'>
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[win_by_wickets]' derivation='Sum' name='[sum:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]' />
              <color column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]' />
              <text column='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:bowling_team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C62524A-AB2B-4F0B-89BE-876EF654CA62}' />
    </worksheet>
    <worksheet name='best player'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.0vrm1a80em23vw13pnhnm185xp22' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrm1a80em23vw13pnhnm185xp22'>
            <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:player_of_match:nk]'>
            <groupfilter function='member' level='[none:player_of_match:nk]' member='&quot;AB de Villiers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]' />
              <text column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:player_of_match:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{D1C70B7E-A97E-4673-91AD-C62B5F18BB58}' />
    </worksheet>
    <worksheet name='best team'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.0vrm1a80em23vw13pnhnm185xp22' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrm1a80em23vw13pnhnm185xp22'>
            <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]' />
              <text column='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:winner:nk]' />
              <color column='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FEB36878-323D-48E5-8FC6-C5F263D93339}' />
    </worksheet>
    <worksheet name='toss winning team'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches+' name='federated.0vrm1a80em23vw13pnhnm185xp22' />
          </datasources>
          <datasource-dependencies datasource='federated.0vrm1a80em23vw13pnhnm185xp22'>
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[win_by_runs]' derivation='Sum' name='[sum:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Sum' name='[sum:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vrm1a80em23vw13pnhnm185xp22].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vrm1a80em23vw13pnhnm185xp22].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0vrm1a80em23vw13pnhnm185xp22].[:Measure Names]' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_runs:qk]' />
              <lod column='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]' />
              <text column='[federated.0vrm1a80em23vw13pnhnm185xp22].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:toss_winner:nk]</rows>
        <cols>[federated.0vrm1a80em23vw13pnhnm185xp22].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DF6A8FDC-1005-43F6-8FB6-3766D12F7B5D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='14' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='48875' id='3' name='best team' w='39600' x='3300' y='4125' />
        <zone h='18500' id='8' name='best player' w='40000' x='48500' y='8875' />
        <zone h='18375' id='9' name='best batsman' w='41200' x='49100' y='25000' />
        <zone h='33250' id='10' name='best bowler' w='33300' x='70000' y='8500' />
        <zone h='44500' id='15' name='best chacing team' w='44900' x='3000' y='54250' />
        <zone h='50000' id='18' name='toss winning team' w='34500' x='54300' y='47625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='48875' id='3' is-fixed='true' name='best team' w='39600' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='10' is-fixed='true' name='best bowler' w='33300' x='70000' y='8500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='148' h='18500' id='8' is-fixed='true' name='best player' w='40000' x='48500' y='8875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='18375' id='9' is-fixed='true' name='best batsman' w='41200' x='49100' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='18' is-fixed='true' name='toss winning team' w='34500' x='54300' y='47625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44500' id='15' is-fixed='true' name='best chacing team' w='44900' x='3000' y='54250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{776AB3C9-4AC0-4D30-8711-F1B8089C2EBD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='best team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:batting_team:nk]</field>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:bowling_team:nk]</field>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45696C88-5920-475E-93D7-EA1816BAD578}' />
    </window>
    <window class='worksheet' name='best player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:inning:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:match_id:ok]</field>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8F44367-C353-4D07-A7CC-8EDE0ADD6382}' />
    </window>
    <window class='worksheet' name='best batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vrm1a80em23vw13pnhnm185xp22].[none:batsman:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:batsman_runs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5502B75F-13C3-4D48-AAF1-61F6CAD99F70}' />
    </window>
    <window class='worksheet' name='best bowler'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrm1a80em23vw13pnhnm185xp22].[cnt:player_dismissed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:bowler:nk]</field>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:player_dismissed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E04BE78C-1791-482A-AAF0-6C8D7440B786}' />
    </window>
    <window class='worksheet' name='best chacing team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:winner:nk]</field>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2B08211-DB8A-43CB-83C2-104E826B42A6}' />
    </window>
    <window class='worksheet' name='toss winning team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:toss_winner:nk]</field>
            <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2852F1CD-C5BB-4370-830F-AC8E8055D01E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='best batsman' />
        <viewpoint name='best bowler' />
        <viewpoint name='best chacing team' />
        <viewpoint name='best player' />
        <viewpoint name='best team' />
        <viewpoint name='toss winning team'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[:Measure Names]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:toss_winner:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[none:toss_winner:nk]</field>
                    <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_runs:qk]</field>
                    <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_wickets:qk]</field>
                    <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[:Measure Names]</field>
                    <field>[federated.0vrm1a80em23vw13pnhnm185xp22].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Chennai Super Kings&quot;</value>
                  <value>1449</value>
                  <value>254</value>
                  <value>&quot;[federated.0vrm1a80em23vw13pnhnm185xp22].[sum:win_by_runs:qk]&quot;</value>
                  <value>1449.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C97DCAE0-1FAE-45FC-A4D0-75CAAC66C076}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='best batsman' width='144'>
      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
      YII=
    </thumbnail>
    <thumbnail height='49' name='best bowler' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='best chacing team' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='best player' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='best team' width='192'>
      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
      D94UJVV72e0iAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='toss winning team' width='192'>
      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
      AamLuc32+CwWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
